# This is a basic workflow to help you get started with Actions

name: "TZ Tests (Vulkan GCC Debug)"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gcc-vulkan-windows:
      # The type of runner that the job will run on
      runs-on: windows-latest
      env:
        VK_SDK_PATH: 'C:/VulkanSDK/1.2.176.1'
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        - name: Setup Vulkan
          run: |
              Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.2.176.1/windows/VulkanSDK-1.2.176.1-Installer.exe" -OutFile VulkanSDK.exe
              $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
              $installer.WaitForExit();
        
        - uses: msys2/setup-msys2@v2

        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        with:
          submodules: recursive

        - uses: lukka/get-cmake@latest

        - name: Build & Run Tests
          run: |
              cmake -B "${GITHUB_WORKSPACE}/build/vulkan_debug" -DTOPAZ_DEBUG=1 -DTOPAZ_VULKAN=1 -DTOPAZ_OGL=0 -G "MinGW Makefiles"
              cd ${GITHUB_WORKSPACE}/build/vulkan_debug && mingw32-make tztest_nographics
          shell: msys2 {0}