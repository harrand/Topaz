# This is a basic workflow to help you get started with Actions

name: "TZ Tests (Vulkan GCC Release)"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gcc-vulkan-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Ensure Dependencies
        run:   |
          sudo apt-get install libxrandr-dev libxinerama-dev x11-xkb-utils libxcursor-dev libxi-dev
      
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@cc516797596f713aee3262a6b5271656a55fa59c
        with:
          vulkan-components: prebuilt

      - name: Install glslc
        run:  |
          cd ${{ github.workspace }}
          mkdir glslc_dir
          cd glslc_dir
          curl https://storage.googleapis.com/shaderc/artifacts/prod/graphics_shader_compiler/shaderc/linux/continuous_gcc_release/380/20220202-124800/install.tgz > glslc.tgz
          tar zxvf glslc.tgz
          cd install/bin
          mkdir $VULKAN_SDK/Bin
          cmake -E copy glslc $VULKAN_SDK/Bin
          echo Copied glslc to $VULKAN_SDK/Bin
          cd $VULKAN_SDK/Bin
          ls

      - name: 'Run all non-graphical tests (gcc vulkan-release)'
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: "CMakeListsTxtAdvanced"
          cmakeGenerator: UnixMakefiles
          cmakeAppendedArgs: "-B \"${{ github.workspace }}/../../_temp/build/debug\" -DTOPAZ_DEBUG=0 -DTOPAZ_VULKAN=1 -DTOPAZ_OGL=0 -DCMAKE_CXX_COMPILER=g++-10"
          buildWithCMake: true
          buildWithCMakeArgs: "--target tztest_nographics --parallel 4"
          buildDirectory: "${{ github.workspace }}/../../_temp/build/debug"
