ogl_debug_callback ::= func(source : s32, type : s32, id : u32, severity : s32, length : u32, msg : u8 mut&) -> v0
{
	puts(msg);
	__debugbreak();
};

wrangle_window_class ::= macro() -> v0
{
	register_wndclass();
	defer unregister_wndclass();
};

setup_arenas ::= macro() -> v0
{
	permanent_arena_val : arena mut := arena_create(4096 * 1024);
	permanent_arena ::= ref permanent_arena_val;
	defer puts("arena free: ");
	defer putuint(permanent_arena_val.cursor);
	defer puts("B");
	defer putchar(10);
	defer arena_destroy(permanent_arena_val);

	frame_arena_val : arena mut := arena_create(4096 * 1024);
	frame_arena ::= ref frame_arena_val;
	defer arena_destroy(frame_arena_val);
};

main ::= func() -> s32
{
	wrangle_window_class();
	setup_arenas();

	wnd ::= open_window(800, 600, "Topaz Test");
	defer close_window(wnd);
	wndval ::= wnd@s64@u64;

	tz_gpu_init(tz_gpu_appinfo
	{
		.name := "Topaz";
		.ver_maj := 6;
		.ver_min := 0;
	});

	hardware_count ::= tz_gpu_hardware_count();
	puts("hardware count: ");
	putuint(hardware_count);
	putchar(10);

	hardware_list : tz_gpu_hardware mut& := arena_push(permanent_arena, __sizeof(tz_gpu_hardware) * hardware_count);
	tz_gpu_iterate_hardware(hardware_list, hardware_count, permanent_arena);
	tz_gpu_use_hardware(deref(hardware_list at 0));

	impl_need_swapchain(800, 600, wnd@s64@_);

	defer tz_gpu_term();

	while(window_is_open(wnd))
	{
		arena_clear(frame_arena);
		window_update();
		if(is_key_down(key.escape))
		{
			puts("goodbye");
			__debugbreak();
		}
	}
	return 0;
};

== build ==
{
	add_source_file("src/wnd.psy");
	add_source_file("src/tz_gpu.psy");
	add_source_file("src/keyboard.psy");

	set_output_directory("build");
	set_executable("tz");
	set_optimisation(0);
}
