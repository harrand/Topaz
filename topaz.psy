ExitProcess ::= func(uExitCode : u32) -> v0 := extern;

main ::= func() -> s32
{
	permanent_arena_val = arena_create(4096 * 1024);
	defer arena_destroy(permanent_arena_val);

	frame_arena_val = arena_create(4096 * 1024);
	defer arena_destroy(frame_arena_val);

	myvec ::= vec2{.x := 69.0; .y := 1.0;};

	ptr : f32 mut& := arena_push(permanent_arena, __sizeof(f32));
	(deref ptr) = vec2_length(myvec);

	register_wndclass();
	defer unregister_wndclass();
	wnd : u64 mut := open_window(800, 600, "Topaz Test");
	defer close_window(wnd);

	load_wgl_functions();
	opengl_wgl_init(wnd);
	glClearColor(0.5, 0.0, 1.0, 1.0);
	hacky_hdc ::= GetDC(wnd);

	while(window_is_open(wnd))
	{
		arena_clear(frame_arena);
		window_update();
		glClear(16384);

		SwapBuffers(hacky_hdc);
		if(is_key_down(key.w))
		{
			__debugbreak();
		}
	}
	ExitProcess(0);
	return 0;
};

== build ==
{
	add_source_file("src/opengl.psy");
	add_source_file("src/string.psy");
	add_source_file("src/arena.psy");
	add_source_file("src/wnd.psy");
	add_source_file("src/vec.psy");
	add_source_file("src/keyboard.psy");
	//add_source_file("src/vulkan.psy");

	set_output_directory("build");
	set_executable("tz");
	set_optimisation(0);
}
