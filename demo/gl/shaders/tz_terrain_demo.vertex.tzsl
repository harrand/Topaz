shader(type = vertex);

import <math>
import <debug>

vec3 quad_positions[12] = vec3[](
	vec3(-1.0, 0.0, -1.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 0.0, -1.0),
	vec3(-1.0, 0.0, -1.0), vec3(-1.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0),
	vec3(1.0, 0.0, 1.0), vec3(0.0, 0.0, 0.0), vec3(-1.0, 0.0, 1.0),
	vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, -1.0), vec3(0.0, 0.0, 0.0)
);

resource(id = 0) const buffer BufferData
{
	mat4 model;
	mat4 view;
	mat4 projection;
	vec3 camera_position;
} data;

output(id = 0) vec3 vertex_position;
output(id = 1) mat4 mvp;
output(id = 5) vec3 camera_position;

void main()
{
	mvp = data.projection * data.view * data.model;
	vertex_position = quad_positions[in::vertex_id] * 1000.0f;
	camera_position = data.camera_position;
	tz::debug::assert(in::vertex_id < 4 * 3);
}
