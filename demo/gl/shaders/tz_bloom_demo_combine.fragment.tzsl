shader(type = fragment);

resource(id = 0) const texture images[2];
output(id = 0) vec4 frag_colour;

const vec2 resolution = vec2(800, 600);

vec4 blur5(vec2 uv, vec2 direction, uint pass_count)
{
	vec4 colour = vec4(0.0);
	vec2 off1 = vec2(1.33333) * direction;
	for(uint i = 0; i < pass_count; i++)
	{
		float ratio = float(i) / pass_count;
		colour += texture(images[1], uv) * 0.29411764705882354;
		colour += texture(images[1], uv + (off1 * ratio / resolution)) * 0.35294117647058826;
		colour += texture(images[1], uv - (off1 * ratio / resolution)) * 0.35294117647058826;
	}
	return colour;
}

void main()
{
	vec2 uv = vec2(in::fragment_coord.xy / resolution.xy);
	vec4 initial_colour = texture(images[0], uv);
	vec4 bloom_colour = blur5(uv, vec2(15.0, 0.0), 6) + blur5(uv, vec2(0.0, 15.0), 6);
	frag_colour = initial_colour + bloom_colour;
}
