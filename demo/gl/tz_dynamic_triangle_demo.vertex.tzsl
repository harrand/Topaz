#pragma shader_stage(vertex)

struct TriangleVertexData
{
    vec3 position;
    vec2 texcoord;
};

resource(id = 0) buffer VertexData
{
    TriangleVertexData[] vertices;
} vertex_data;

layout(location = 0) out vec2 texcoord;

void main() {
    TriangleVertexData cur_vertex = vertex_data.vertices[tz_VertexID];
    gl_Position = vec4(cur_vertex.position, 1.0);
    texcoord = cur_vertex.texcoord;
    #if TZ_VULKAN
	// for OGL, z is [-1,1], but for VK is [0,1]
	// we use OGL so to get vulkan z we add 1 and then half
	gl_Position.z = (gl_Position.z + 1.0) * 0.5;
    #endif
}
