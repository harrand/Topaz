== build ==
{
	add_source_directory("src/stdlib/src");
	add_source_directory("src/");
	set_executable("tz");

	static if(_win32)
	{
		add_link_library("User32.lib");
		add_link_library("Shell32.lib");
		add_link_library("Gdi32.lib");
		add_link_library("Dwmapi.lib");
	}
}

global_arena_value : arena mut := zero;
global_arena : arena mut? mut := zero;

setup_arenas ::= func(-> v0)
{
	global_arena_value = arena_create(1024 * 1024);
	global_arena = ref global_arena_value;
};

destroy_arenas ::= func(-> v0)
{
	putzstr("arena size: ");
	putuint(global_arena->cur);
	putzstr("B");
	putchar(10);
	arena_destroy(global_arena);
};

main ::= func(-> s32)
{
	setup_arenas();
	defer destroy_arenas();
	wnd ::= tz_window_open(800, 600, "Epic Window Bro", zero, global_arena);
	wnd2 ::= tz_window_open(400, 400, "Smaller Window 2", zero, global_arena);

	buf : u8 mut[64];
	if(!tz_window_title(wnd2, buf # 0, 64, zero))
	{
		__debugbreak();
	}
	putzstr("window title: ");
	putchar('"');
	putzstr(buf # 0);
	putchar('"');
	putchar(10);

	tz_window_set_title(wnd2, "A new window title");

	tz_gpu_init(tz_gpu_appinfo
	{
		.name := "Topaz";
		.ver_maj := 6;
		.ver_min := 0;
	});
	defer tz_gpu_term();

	hardware_count ::= tz_gpu_hardware_count();
	hardware_list : tz_gpu_hardware mut? := arena_alloc(global_arena, __sizeof(tz_gpu_hardware) * hardware_count);
	tz_gpu_iterate_hardware(hardware_list # 0, hardware_count, global_arena);
	tz_gpu_use_hardware(deref(hardware_list # 0), wnd);

	shader_data ::= tz_gpu_load_shader_files("build/vertex.spv", "build/fragment.spv", global_arena);
	shader ::= tz_gpu_create_graphics_shader(shader_data.vertex_spv_data, shader_data.vertex_spv_count, shader_data.fragment_spv_data, shader_data.fragment_spv_count, global_arena);
	colour_targets : tz_gpu_resource mut? := arena_alloc(global_arena, __sizeof(tz_gpu_resource) * 1);
	deref(colour_targets # 0) = (tz_gpu_resource.window_resource);

	pass ::= tz_gpu_create_pass(tz_gpu_pass_info
	{
		.graphics := tz_gpu_graphics_state
		{
			.clear_colour := zero;
			.scissor := zero;
			.colour_targets_data := colour_targets # 0;
			.colour_targets_count := 1;
			.depth_target := tz_gpu_resource.invalid;
			.index_buffer := tz_gpu_resource.invalid;
			.draw_buffer := tz_gpu_resource.invalid;
			.culling := tz_gpu_cull.none;
			.static_tri_count := 2;
		};
		.compute := zero;
		.shader := shader;
		.resources_data := zero;
		.resources_count := 0;
		.name := "Test Renderer";
	}, global_arena, global_arena);

	graph ::= tz_gpu_create_graph("test", global_arena);
	tz_gpu_graph_add_pass(graph, pass);
	tz_gpu_graph_add_pass(graph, tz_gpu_pass.present);

	while(tz_window_is_open(wnd) || tz_window_is_open(wnd2))
	{
		tz_gpu_execute(graph, global_arena, global_arena);
		tz_update_windows();
	}
	return 0;
};
