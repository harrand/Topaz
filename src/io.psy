GetStdHandle ::= func(handle : u32) -> u64 := extern;
WriteConsoleA ::= func(hConsoleOutput : u64, lpBuffer : u8&, write_count : u32, chars_written : u32 mut& weak, reserved : v0&) -> s32 := extern;

putchar ::= func(chr : u8) -> v0
{
	handle ::= GetStdHandle(4294967285@u32);
	WriteConsoleA(handle, ref chr, 1@u32, null, null);
};

putuint ::= func(v : u64 mut weak) -> v0
{
	if(v > 9)
	{
		putuint(v / 10);
	}
	digit ::= v - ((v / 10) * 10);
	putchar('0' + digit);
};

putsint ::= func(v : s64 mut weak) -> v0
{
	if(v < 0)
	{
		putchar('-');
		v = v * -1;
	}
	putuint(v);
};

== build ==
{
	add_link_library("Kernel32.lib");
}
