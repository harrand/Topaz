shader(type = fragment);
#define MAX_TEX_COUNT 2
#define BADU ~0u

struct texture_locator
{
	vec3 colour_tint;
	uint texture_id;
};

output(id = 0) vec4 out::colour;
input(id = 0) vec2 in::texcoord[MAX_TEX_COUNT];
input(id = 9) vec3 in::normal;
input(id = 10, flat) texture_locator in::textures[MAX_TEX_COUNT];
resource(id = 4) const texture res::textures[];

void main()
{
	out::colour = vec4(vec3(0.0f), 1.0f);
	bool any_texture_applied = false;
	for(uint i = 0; i < MAX_TEX_COUNT; i++)
	{
		if(in::textures[i].texture_id == BADU)
		{
			continue;
		}
		texture_locator tex = in::textures[i];
		out::colour.xyz += texture(res::textures[tex.texture_id], in::texcoord[i]).xyz * tex.colour_tint;
		any_texture_applied = true;
	}
	if(!any_texture_applied)
	{
		out::colour = vec4(1.0f, 0.0f, 0.0f, 1.0f);
	}
}