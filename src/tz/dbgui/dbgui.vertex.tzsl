shader(type = vertex);

import <debug>

struct ImGuiVertex
{
	vec2 pos;
	vec2 uv;
	uint col;
};

resource(id = 0) const buffer Vertices
{
	ImGuiVertex data[];
} vertices;

output(id = 0) vec2 vertex_uv;
output(id = 1) vec4 vertex_colour;

void main()
{
	ImGuiVertex vtx = vertices.data[in::vertex_id];
	out::position = vec4(vtx.pos, 0.0f, 1.0f);
	vertex_uv = vtx.uv;

	vertex_colour = vec4(0.0);
	vertex_colour.r = ((vtx.col >> 24) & 0xFF) / 255.0f;
	vertex_colour.g = ((vtx.col >> 16) & 0xFF) / 255.0f;
	vertex_colour.b = ((vtx.col >> 8) & 0xFF) / 255.0f;
	vertex_colour.a = 1.0f;
	tz::debug::printf("vertex colour = %u {%v4f}", vtx.col, vertex_colour);
}
