== build ==
{
	add_build_file("tz.psy");
	set_executable("tztest");
}

global_arena_value : arena mut := zero;
global_arena : arena mut? mut := zero;

frame_arena_value : arena mut := zero;
frame_arena : arena mut? mut := zero;

setup_arenas ::= func(-> v0)
{
	global_arena_value = arena_create(1024 * 1024);
	global_arena = ref global_arena_value;

	frame_arena_value = arena_create(1024 * 1024);
	frame_arena = ref frame_arena_value;
};

destroy_arenas ::= func(-> v0)
{
	putzstr("global arena size: ");
	putuint(global_arena->cur);
	putzstr("B");
	putchar(10);
	arena_destroy(global_arena);

	putzstr("frame arena size: ");
	putuint(frame_arena->cur);
	putzstr("B");
	putchar(10);
	arena_destroy(frame_arena);
};

main ::= func(-> s32)
{
	nums : s64 mut[8];
	i : u64 mut;
	for(i = 0, i < 8, i = i + 1)
	{
		deref(nums#i) = i@_;
	}
	putchar('{');
	for(i = 0, i < 8, i = i + 1)
	{
		putsint(deref(nums#i));
		putchar(10);
	}
	putchar('}');
	putchar(10);
	putsint(__arrcpy(nums#3 s64, 10, 11, 12, 13));
	putchar(10);
	putchar('{');
	for(i = 0, i < 8, i = i + 1)
	{
		putsint(deref(nums#i));
		putchar(10);
	}
	putchar('}');

	setup_arenas();
	defer destroy_arenas();
	wnd ::= tz_window_open(800, 600, "Epic Window Bro", tz_window_flag.bare, global_arena);
	tz_window_maximize(wnd);

	tz_gpu_init(tz_gpu_appinfo
	{
		.name := "Topaz";
		.ver_maj := 6;
		.ver_min := 0;
	});

	hardware_count ::= tz_gpu_hardware_count();
	hardware_list : tz_gpu_hardware mut? := arena_alloc(global_arena, __sizeof(tz_gpu_hardware) * hardware_count);
	tz_gpu_iterate_hardware(hardware_list # 0, hardware_count, global_arena);
	tz_gpu_use_hardware(deref(hardware_list # 0), wnd);

	shader_data ::= tz_gpu_load_shader_files("build/vertex.spv", "build/fragment.spv", global_arena);
	shader ::= tz_gpu_create_graphics_shader(shader_data.vertex_spv_data, shader_data.vertex_spv_count, shader_data.fragment_spv_data, shader_data.fragment_spv_count, global_arena);
	colour_targets : tz_gpu_resource mut[1];
	deref(colour_targets # 0) = (tz_gpu_resource.window_resource);

	pass ::= tz_gpu_create_pass(tz_gpu_pass_info
	{
		.graphics := tz_gpu_graphics_state
		{
			.clear_colour := f32[4]{0.5; 0.0; 1.0; 1.0;};
			.scissor := zero;
			.colour_targets_data := colour_targets # 0;
			.colour_targets_count := __sizeof(colour_targets) / __sizeof(deref(colour_targets # 0));
			.depth_target := tz_gpu_resource.invalid;
			.index_buffer := tz_gpu_resource.invalid;
			.draw_buffer := tz_gpu_resource.invalid;
			.culling := tz_gpu_cull.none;
			.static_tri_count := 1;
		};
		.compute := zero;
		.shader := shader;
		.resources_data := zero;
		.resources_count := 0;
		.name := "Test Renderer";
	}, global_arena, frame_arena);

	graph ::= tz_gpu_create_graph("test", global_arena);
	tz_gpu_graph_add_pass(graph, pass);
	tz_gpu_graph_add_pass(graph, tz_gpu_pass.present);

	while(tz_window_is_open(wnd))
	{
		arena_clear(frame_arena);
		tz_gpu_execute(graph, global_arena, frame_arena);
		tz_update_windows();
	}
	tz_gpu_term();
	return 0;
};
