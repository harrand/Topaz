#ifndef TZSLC_STDLIB_MESH_TZSL
#define TZSLC_STDLIB_MESH_TZSL
/**
 * TZSL stdlib: <mesh>
 * harrand 11/06/2022 for tz3.3
 */

 const vec3 tz::mesh::fullscreen_triangle[3] = vec3[](
 	vec3(-1.0, -1.0, 0.0), vec3(3.0, -1.0, 0.0), vec3(-1.0f, 3.0, 0.0)
 );

 const vec3 tz::mesh::fullscreen_quad[6] = vec3[](
	vec3(-1.0, 0.0, -1.0), vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, -1.0),
	vec3(-1.0, 0.0, -1.0), vec3(-1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)
 );

 const vec3 tz::mesh::cube[36] = vec3[](
	vec3(-1.0, -1.0, -1.0),
	vec3(-1.0, -1.0, 1.0),
	vec3(-1.0, 1.0, 1.0),

	vec3(1.0, 1.0, -1.0),
	vec3(-1.0, -1.0, -1.0),
	vec3(-1.0, 1.0, -1.0),

	vec3(1.0, -1.0, 1.0),
	vec3(-1.0, -1.0, -1.0),
	vec3(1.0, -1.0, -1.0),

	vec3(1.0, 1.0, -1.0),
	vec3(1.0, -1.0, -1.0),
	vec3(-1.0, -1.0, -1.0),

	vec3(-1.0, -1.0, -1.0),
	vec3(-1.0, 1.0, 1.0),
	vec3(-1.0, 1.0, -1.0),

	vec3(1.0, -1.0, 1.0),
	vec3(-1.0, -1.0, 1.0),
	vec3(-1.0, -1.0, -1.0),

	vec3(-1.0, 1.0, 1.0),
	vec3(-1.0, -1.0, 1.0),
	vec3(1.0, -1.0, 1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(1.0, -1.0, -1.0),
	vec3(1.0, 1.0, -1.0),

	vec3(1.0, -1.0, -1.0),
	vec3(1.0, 1.0, 1.0),
	vec3(1.0, -1.0, 1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(1.0, 1.0, -1.0),
	vec3(-1.0, 1.0, -1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(-1.0, 1.0, -1.0),
	vec3(-1.0, 1.0, 1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(-1.0, 1.0, 1.0),
	vec3(1.0, -1.0, 1.0)
 );

/// End stdlib impl: <mesh>
#endif // TZSLC_STDLIB_MESH_TZSL
