#ifndef TZSLC_STDLIB_MESH_TZSL
#define TZSLC_STDLIB_MESH_TZSL
/*
 * TZSL stdlib: <mesh>
 * harrand 11/06/2022 for tz3.3
 */

/**
 * @ingroup tzsl
 * @defgroup tzsl_mesh Precomputed Meshes
 * Retrieve basic pre-computed mesh expressed as an array of unindexed positions (triangles). Import <mesh>
 */

// Documentation purposes only.
#define DOCONLY TZ_VULKAN && TZ_OGL
#if DOCONLY

/**
 * @ingroup tzsl_mesh
 * Contains pre-computed mesh data.
 */
namespace tz::mesh
{
	 /**
	  * @ingroup tzsl_mesh
	  * A single triangle which fills the entire screen, in clip-space.
	  */
	vec3[] fullscreen_triangle[3];
	 /**
	  * @ingroup tzsl_mesh
	  * A quad comprised of two triangles which exactly fills the entire screen, in clip-space.
	  */
	vec3[] fullscreen_quad[6];
	 /**
	  * @ingroup tzsl_mesh
	  * A cube which fills the entire screen and depth `-1.0` to `1.0`, in clip-space.
	  */
	vec3[] fullscreen_cube[36];
}

#endif // DOCONLY


 const vec3 tz::mesh::fullscreen_triangle[3] = vec3[](
 	vec3(-1.0, -1.0, 0.0), vec3(3.0, -1.0, 0.0), vec3(-1.0f, 3.0, 0.0)
 );

 const vec3 tz::mesh::fullscreen_quad[6] = vec3[](
	vec3(-1.0, 0.0, -1.0), vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, -1.0),
	vec3(-1.0, 0.0, -1.0), vec3(-1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)
 );

 const vec3 tz::mesh::cube[36] = vec3[](
	vec3(-1.0, -1.0, -1.0),
	vec3(-1.0, -1.0, 1.0),
	vec3(-1.0, 1.0, 1.0),

	vec3(1.0, 1.0, -1.0),
	vec3(-1.0, -1.0, -1.0),
	vec3(-1.0, 1.0, -1.0),

	vec3(1.0, -1.0, 1.0),
	vec3(-1.0, -1.0, -1.0),
	vec3(1.0, -1.0, -1.0),

	vec3(1.0, 1.0, -1.0),
	vec3(1.0, -1.0, -1.0),
	vec3(-1.0, -1.0, -1.0),

	vec3(-1.0, -1.0, -1.0),
	vec3(-1.0, 1.0, 1.0),
	vec3(-1.0, 1.0, -1.0),

	vec3(1.0, -1.0, 1.0),
	vec3(-1.0, -1.0, 1.0),
	vec3(-1.0, -1.0, -1.0),

	vec3(-1.0, 1.0, 1.0),
	vec3(-1.0, -1.0, 1.0),
	vec3(1.0, -1.0, 1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(1.0, -1.0, -1.0),
	vec3(1.0, 1.0, -1.0),

	vec3(1.0, -1.0, -1.0),
	vec3(1.0, 1.0, 1.0),
	vec3(1.0, -1.0, 1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(1.0, 1.0, -1.0),
	vec3(-1.0, 1.0, -1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(-1.0, 1.0, -1.0),
	vec3(-1.0, 1.0, 1.0),

	vec3(1.0, 1.0, 1.0),
	vec3(-1.0, 1.0, 1.0),
	vec3(1.0, -1.0, 1.0)
 );

// End stdlib impl: <mesh>
#endif // TZSLC_STDLIB_MESH_TZSL
